<?php

namespace app\modules\purchase\models;

use app\traits\createMultiple;
use Yii;
use app\modules\purchase\models\PurchaseItem;
use yii\behaviors\AttributeBehavior;
use yii\behaviors\TimestampBehavior;
use yii\db\ActiveRecord;

/**
 * This is the model class for table "{{%purchase}}".
 *
 * @property int $id
 * @property string $title
 * @property string $description
 * @property float $budget
 * @property int|null $views
 * @property int $status
 * @property int $created_by
 * @property int $created_at
 * @property int $updated_at
 *
 * @property PurchaseItem[] $purchaseItems
 */
class Purchase extends ActiveRecord
{

    use createMultiple;

    const STATUS_PUBLISHED = 1;
    const STATUS_DRAFT = 0;


    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return '{{%purchase}}';
    }

    public function behaviors()
    {
        return [
            TimestampBehavior::class,
            'created_by' => [
                'class' => AttributeBehavior::class,
                'attributes' => [
                    ActiveRecord::EVENT_BEFORE_INSERT => 'created_by'
                ],
                'value' => Yii::$app->user->id
            ],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['title', 'description', 'budget', 'status', ], 'required'],
            [['description'], 'string'],
            [['budget'], 'number'],
            [['status'], 'in', 'range' => [self::STATUS_DRAFT, self::STATUS_PUBLISHED]],
            [['title'], 'string', 'max' => 255],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'title' => Yii::t('app', 'Title'),
            'description' => Yii::t('app', 'Description'),
            'budget' => Yii::t('app', 'Budget'),
            'views' => Yii::t('app', 'Views'),
            'status' => Yii::t('app', 'Status'),
            'created_at' => Yii::t('app', 'Created At'),
            'updated_at' => Yii::t('app', 'Updated At'),
        ];
    }

    public static function statuses()
    {
        return [
            self::STATUS_DRAFT => Yii::t('app', 'Draft'),
            self::STATUS_PUBLISHED => Yii::t('app', 'Published'),
        ];
    }

    /**
     * Gets query for [[PurchaseItems]].
     *
     * @return \yii\db\ActiveQuery|PurchaseItem
     */
    public function getPurchaseItems()
    {
        return $this->hasMany(PurchaseItem::class, ['purchase_id' => 'id']);
    }

    public function beforeSave($insert)
    {

        if ($this->getOldAttribute('status') == self::STATUS_PUBLISHED && $this->getAttribute('status') != self::STATUS_PUBLISHED){
            $this->addError('status', 'Нельзя изменить статус');
            $this->status = self::STATUS_PUBLISHED;
            return false;
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * {@inheritdoc}
     * @return PurchaseQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new PurchaseQuery(get_called_class());
    }
}
